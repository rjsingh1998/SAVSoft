package com.sav.persistance;

import java.util.HashSet;
import java.util.Set;

// Generated 22 janv. 2015 15:05:41 by Hibernate Tools 3.4.0.CR1

/**
 * Client generated by hbm2java
 */
public class Marque implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer idmarque;
	private String designationMarq;
	private Set<Machine> machines= new HashSet<Machine>();
	
	
	
	
	
	
	
	public Set<Machine> getMachines() {
		return machines;
	}

	public void setMachines(Set<Machine> machines) {
		this.machines = machines;
	}

	public Marque() {
	}

	public Marque( String designationMarq) {
		
		this.designationMarq = designationMarq;
	
		
		
	}

	public Integer getIdmarque() {
		return idmarque;
	}

	public void setIdmarque(Integer idmarque) {
		this.idmarque = idmarque;
	}

	public String getDesignationMarq() {
		return designationMarq;
	}

	public void setDesignationMarq(String designationMarq) {
		this.designationMarq = designationMarq;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((designationMarq == null) ? 0 : designationMarq.hashCode());
		result = prime * result
				+ ((idmarque == null) ? 0 : idmarque.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Marque other = (Marque) obj;
		if (designationMarq == null) {
			if (other.designationMarq != null)
				return false;
		} else if (!designationMarq.equals(other.designationMarq))
			return false;
		if (idmarque == null) {
			if (other.idmarque != null)
				return false;
		} else if (!idmarque.equals(other.idmarque))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Marque [idmarque=" + idmarque + ", designationMarq="
				+ designationMarq + "]";
	}
	
	
	

}